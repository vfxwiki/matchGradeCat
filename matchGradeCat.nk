
set cut_paste_input [stack 0]
version 15.0 v4
push 0
push $cut_paste_input
Group {
 inputs 2
 name MatchGradeCat
 selected true
 xpos 382
 ypos -50
 addUserKnob {20 User l MatchGradeCat}
 addUserKnob {41 output_group l output T Switch1.output_group}
 addUserKnob {41 modelFile l "Inference Model File" T Inference.modelFile}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T Inference.useGPUIfAvailable}
 addUserKnob {41 halfPrecision l "Optimize for Speed and Memory" -STARTLINE T Inference.halfPrecision}
 addUserKnob {26 ""}
 addUserKnob {41 first_frame l "frame range to avg." t "The frame range is the frames used to predict the CDL values, that will then be averaged out." T FrameRange1.first_frame}
 addUserKnob {41 last_frame_1 l "" -STARTLINE T FrameRange1.last_frame}
 addUserKnob {41 reset -STARTLINE T FrameRange1.reset}
 addUserKnob {41 create_cdl l "Create CDL Values" T Ctrl.create_cdl}
 addUserKnob {41 exportCDLnode l "Export CDL node" -STARTLINE T Ctrl.exportCDLnode}
 addUserKnob {41 copyModelFile l "Set Inference" -STARTLINE T Ctrl.copyModelFile}
 addUserKnob {26 ""}
 addUserKnob {41 slope T OCIOCDLTransform.slope}
 addUserKnob {41 offset T OCIOCDLTransform.offset}
 addUserKnob {41 power T OCIOCDLTransform.power}
 addUserKnob {41 saturation T OCIOCDLTransform.saturation}
 addUserKnob {41 export_cc l "export grade as .cc" T OCIOCDLTransform.export_cc}
 addUserKnob {26 "" l " "}
 addUserKnob {20 train l Train}
 addUserKnob {41 firstFrame l "Source frame" T FrameHoldSource.firstFrame}
 addUserKnob {41 setToCurrentFrame l "Set to Current Frame" -STARTLINE T FrameHoldSource.setToCurrentFrame}
 addUserKnob {41 firstFrame_1 l "Target frame" T FrameHoldTarget.firstFrame}
 addUserKnob {41 setToCurrentFrame_1 l "Set to Current Frame" -STARTLINE T FrameHoldTarget.setToCurrentFrame}
 addUserKnob {41 last_frame l "train frames" t "this is the amount of random grades the model will be trained on - this increases caching time" T FrameRange2.last_frame}
 addUserKnob {41 maxSlp l "max Slope (mult)" t "When training this is the maximum  +/- value that this will be used." T OCIOCDLTransformSAW.maxSlp}
 addUserKnob {41 maxOffset l "max Offset" t "When training this is the maximum  +/- value that this will be used." T OCIOCDLTransformSAW.maxOffset}
 addUserKnob {41 maxPower l "max Power" t "When training this is the maximum  +/- value that this will be used." T OCIOCDLTransformSAW.maxPower}
 addUserKnob {26 ""}
 addUserKnob {41 dataDirectory l "Data Directory" T CopyCatGrade.dataDirectory}
 addUserKnob {41 checkpointFile l "Checkpoint File" T CopyCatGrade.checkpointFile}
 addUserKnob {41 epochs l Epochs t "if this is too high you will 'overfit' the data to the model!" T CopyCatGrade.epochs}
 addUserKnob {41 batchSizeType l "Batch Size" T CopyCatGrade.batchSizeType}
 addUserKnob {41 batchSize l "" -STARTLINE T CopyCatGrade.batchSize}
 addUserKnob {26 txt_1 l " " T "<b> set output to 'CDL' not 'liveCat' when training to avoid crashing and slow caching"}
 addUserKnob {41 startTraining l "Start Training" T CopyCatGrade.startTraining}
 addUserKnob {41 resumeTraining l "Resume Training" -STARTLINE T CopyCatGrade.resumeTraining}
 addUserKnob {20 Graph n 1}
 Graph 0
 addUserKnob {41 logScale l "Log Scale" T CopyCatGrade.logScale}
 addUserKnob {41 smoothness l Smoothness T CopyCatGrade.smoothness}
 addUserKnob {41 showOriginal l "Show Original Curve" T CopyCatGrade.showOriginal}
 addUserKnob {41 chart l "" -STARTLINE T CopyCatGrade.chart}
 addUserKnob {20 "" n -1}
 addUserKnob {20 contact_group l "Contact Sheet" n 1}
 contact_group 0
 addUserKnob {41 overlay l "" -STARTLINE T CopyCatGrade.overlay}
 addUserKnob {20 "" n -1}
 addUserKnob {20 preview_group l Preview n 1}
 preview_group 0
 addUserKnob {41 preview l "" -STARTLINE T CopyCatGrade.preview}
 addUserKnob {20 "" n -1}
 addUserKnob {20 tab l info}
 addUserKnob {26 ver l ver. T "0.1b - 24/04/24 beta init by <a href='https://movingimagearts.com'> Rafal Kaniewski</a> "}
 addUserKnob {26 link_docs l docs: T " <a href='https://github.com/vfxwiki/matchGradeCat/wiki'> Github.com</a>"}
 addUserKnob {26 link_source l source: T "<a href='https://github.com/vfxwiki/matchGradeCat'> Github.com</a>"}
 addUserKnob {26 txt l Notes}
 addUserKnob {26 notes l "" +STARTLINE T "On Train tab\n* Select two frames for your source and target. (these do not act as \n    source/target when training, but just are two images that are \n    different in your sequence i.e. wideshot and closeup)\n* select the max required range of CDL dlope/offset/power values\n* Create a data directory folder\n* Dowload an inference model file checkpoint from source link above and\n   add the path to 'Checkpoint File'\n* Click start training (you will need an OK GPU)\n\nOn the main tab:\n* Add the Cat you have just made to the 'Inference Model File' path\n* Set the frame range that you will use from the source to generate the CDL\n* Click Create CDL\n\nTip: make sure the 'Inference Model File' path is not the same as the data\n directory folder as caching takes longer (on windows)"}
}
 Input {
  inputs 0
  name Source
  xpos 1030
  ypos -781
  number 1
 }
 Dot {
  name Dot2
  xpos 1064
  ypos -564
 }
set Ncb8ff000 [stack 0]
 OCIOCDLTransform {
  slope {1 1 1}
  offset {0 0 0}
  power {1 1 1}
  working_space scene_linear
  name OCIOCDLTransform
  xpos 1272
  ypos 512
 }
push $Ncb8ff000
 Input {
  inputs 0
  name Target
  xpos 764
  ypos -774
 }
 Dot {
  name Dot3
  xpos 798
  ypos -600
 }
set Ncb950000 [stack 0]
add_layer {graded graded.red graded.green graded.blue}
 AddChannels {
  channels graded
  name AddChannels1
  xpos 764
  ypos -292
 }
 Shuffle2 {
  inputs 2
  fromInput1 {{0} B A}
  out1 graded
  fromInput2 {{1} B A}
  in2 rgb
  out2 rgb
  mappings "6 rgba.red 0 0 graded.red 0 0 rgba.green 0 1 graded.green 0 1 rgba.blue 0 2 graded.blue 0 2 rgba.red 1 0 rgba.red 1 0 rgba.green 1 1 rgba.green 1 1 rgba.blue 1 2 rgba.blue 1 2"
  name Shuffle1
  xpos 825
  ypos -211
 }
 FrameRange {
  first_frame 1001
  last_frame 1101
  time ""
  name FrameRange1
  xpos 825
  ypos -169
 }
 Blur {
  size 1.75
  quality 30
  name Blur2
  xpos 825
  ypos -122
 }
 Reformat {
  format "256 256 0 0 256 256 1 square_256"
  resize fill
  filter impulse
  name Reformat4
  xpos 825
  ypos -67
 }
 Clamp {
  minimum_enable false
  maximum 5
  name Clamp8
  xpos 825
  ypos -19
 }
 Grade {
  channels all
  blackpoint -0.2
  white 0.2
  black_clamp false
  name Grade3
  xpos 825
  ypos 17
 }
 Clamp {
  name Clamp7
  xpos 825
  ypos 53
 }
 Inference {
  serialiseKnob {}
  name Inference
  xpos 831
  ypos 137
 }
 Clamp {
  name Clamp10
  xpos 831
  ypos 221
 }
 Grade {
  channels all
  white 0.2
  reverse true
  black_clamp false
  name Grade4
  xpos 831
  ypos 253
 }
 Clamp {
  minimum_enable false
  maximum 5
  name Clamp11
  xpos 831
  ypos 289
 }
add_layer {cdlOffset cdlOffset.red cdlOffset.green cdlOffset.blue}
 Add {
  channels cdlOffset
  value -1
  name Add2
  xpos 831
  ypos 325
 }
add_layer {cdlSlope cdlSlope.red cdlSlope.green cdlSlope.blue}
 Shuffle2 {
  fromInput1 {{0} B}
  in1 cdlSlope
  out1 rgb
  fromInput2 {{0} B}
  mappings "3 cdlSlope.red 0 0 rgba.red 0 0 cdlSlope.green 0 1 rgba.green 0 1 cdlSlope.blue 0 2 rgba.blue 0 2"
  name Shuffle4
  xpos 831
  ypos 401
 }
 Rectangle {
  output rgb
  area {0 0 {width} {height}}
  color {{"\[sample this.input r (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input g (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input b (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} 0}
  name RectangleSlope
  xpos 831
  ypos 425
 }
set Ncb98fc00 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  in1 cdlOffset
  out1 rgb
  fromInput2 {{0} B}
  mappings "3 cdlOffset.red 0 0 rgba.red 0 0 cdlOffset.green 0 1 rgba.green 0 1 cdlOffset.blue 0 2 rgba.blue 0 2"
  name Shuffle5
  xpos 831
  ypos 473
 }
 Rectangle {
  output rgb
  area {0 0 {width} {height}}
  color {{"\[sample this.input r (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input g (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input b (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} 0}
  name RectangleOffset
  xpos 831
  ypos 497
 }
set Nb9240400 [stack 0]
add_layer {cdlPower cdlPower.red cdlPower.green cdlPower.blue}
 Shuffle2 {
  fromInput1 {{0} B}
  in1 cdlPower
  out1 rgb
  fromInput2 {{0} B}
  mappings "3 cdlPower.red 0 0 rgba.red 0 0 cdlPower.green 0 1 rgba.green 0 1 cdlPower.blue 0 2 rgba.blue 0 2"
  name ShufflePower
  xpos 831
  ypos 542
 }
 Rectangle {
  output rgb
  area {0 0 {width} {height}}
  color {{"\[sample this.input r (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input g (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} {"\[sample this.input b (input.width/2) (input.height/2) (input.width/2) (input.height/2)]"} 0}
  name RectanglePower
  xpos 831
  ypos 566
 }
set Nb9240c00 [stack 0]
push $Nb9240400
push $Ncb98fc00
push $Ncb8ff000
 Dot {
  name Dot4
  xpos 1097
  ypos 360
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels rgb
  Bchannels rgb
  output rgb
  name Multiply
  xpos 1063
  ypos 425
 }
 Merge2 {
  inputs 2
  operation plus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Plus
  xpos 1063
  ypos 497
 }
 MergeExpression {
  inputs 2
  expr0 pow(Br,Ar)
  expr1 pow(Bg,Ag)
  expr2 pow(Bb,Ab)
  channel3 {none none none -rgba.alpha}
  name MergeExpression1
  xpos 1063
  ypos 566
 }
 Switch {
  inputs 2
  which {{output_group i}}
  name Switch1
  xpos 1178
  ypos 601
  addUserKnob {20 User}
  addUserKnob {68 output_group l output M {"LiveCat\t" CDL}}
  output_group CDL
 }
 Output {
  name Output1
  xpos 1178
  ypos 654
 }
push $Nb9240400
 CurveTool {
  ROI {0 0 2048 1556}
  autocropdata {512 389 1536 1167}
  intensitydata {{curve i x1041 -0.07942540199 -0.08063469827 -0.08366859704 -0.08747640252 -0.08765219897 -0.08155599982 -0.08062530309 -0.0799625963 -0.0754956007 -0.07350710034 -0.07213339955 -0.07146350294 -0.06971359998 -0.07184919715 -0.07218819857 -0.07289329916 -0.07025370002 -0.06970079988 -0.07638789713 -0.08536989987 -0.08712050319 -0.08047509938 -0.07578200102 -0.07754349709 -0.08678580076 -0.0833799988 -0.07256510109 -0.07027710229 -0.07202140242 -0.07630570233 -0.08175829798 -0.08354049921 -0.07837600261 -0.07596330345 -0.07372029871 -0.07134900242 -0.07130710036 -0.07305260003 -0.07705680281 -0.07549840212 -0.07860399783 -0.07606589794 -0.07441519946 -0.07353720069 -0.07344949991 -0.07653260231 -0.08360520005 -0.08343529701 -0.09615270048 -0.1054899991 -0.1109450012 -0.107712999 -0.1069329977 -0.1125480011 -0.1220130026 -0.1190889999 -0.116361998 -0.1293119937 -0.131904006} {curve i x1041 -0.02257280052 -0.02276550047 -0.02374649979 -0.02450839989 -0.0249358993 -0.02487139963 -0.02316980064 -0.02095719986 -0.02104309946 -0.02168999985 -0.02328079939 -0.0245156996 -0.02522780001 -0.02492230013 -0.02646169998 -0.02573000081 -0.02329559997 -0.02209950052 -0.02022789977 -0.0211939998 -0.02223329991 -0.0237789005 -0.0243529994 -0.02699640021 -0.0265416 -0.03013209999 -0.03105040081 -0.02685349993 -0.02659679949 -0.02528510056 -0.02330389991 -0.02305250056 -0.02426780015 -0.02547379956 -0.02724869922 -0.02367090061 -0.02306409925 -0.02303349972 -0.02233910002 -0.02235849947 -0.02248370089 -0.02254859917 -0.02284320071 -0.02519289963 -0.02600979991 -0.02691360004 -0.02915710025 -0.03034139983 -0.02751619928 -0.02619710006 -0.02436289936 -0.0241537001 -0.02397179976 -0.02049610019 -0.01682339981 -0.01742880046 -0.01562209986 -0.00843617972 -0.004998929799} {curve i x1041 0.06789650023 0.0682651028 0.07229220122 0.0784991011 0.07526440173 0.06533250213 0.05623310059 0.05480369925 0.05366919935 0.05208830163 0.04966570064 0.0515139997 0.04502249882 0.04701400176 0.04637520015 0.04347129911 0.04342469946 0.04435180128 0.05288700014 0.06131049991 0.06552899629 0.06298899651 0.0527635999 0.0549729988 0.0695028007 0.07711719722 0.0723818019 0.05833160132 0.05826250091 0.0541305989 0.05471900105 0.05470979959 0.04937240109 0.04891749844 0.05017749965 0.04875469953 0.0448394008 0.04621459916 0.05662979931 0.05179459974 0.05410059914 0.04907130077 0.0465109013 0.04976329952 0.05032509938 0.0527583994 0.06084769964 0.06326760352 0.08220800012 0.09646250308 0.09902790189 0.08883350343 0.08463600278 0.08923160285 0.09896130115 0.08977860212 0.08735849708 0.101997003 0.1065400019} {curve i x1081 0}}
  name CurveTool_offset
  xpos 633
  ypos 497
  addUserKnob {20 User}
  addUserKnob {18 avg_curve}
  avg_curve {{"intensitydata.r.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.g.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.b.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i}}
  addUserKnob {6 avg_curve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 avgCurve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
push $Nb9240c00
 CurveTool {
  ROI {0 0 2048 1556}
  autocropdata {512 389 1536 1167}
  intensitydata {{curve i x1041 0.9814810157 0.9809179902 0.9799100161 0.9788320065 0.9792240262 0.9807310104 0.981186986 0.9816139936 0.9822580218 0.9827749729 0.9828870296 0.9829710126 0.9836230278 0.9836379886 0.9833170176 0.9835090041 0.9844689965 0.984803021 0.9827679992 0.9807810187 0.9795809984 0.9798129797 0.9815260172 0.9809190035 0.9777730107 0.9754289985 0.9769769907 0.979238987 0.9792249799 0.9793969989 0.978260994 0.9779809713 0.9796649814 0.9806489944 0.981284976 0.9819710255 0.982945025 0.9828209877 0.9814509749 0.9819930196 0.9814540148 0.9821879864 0.9827629924 0.9827150106 0.9822710156 0.9811689854 0.9795179963 0.9793940187 0.9765210152 0.974281013 0.974075973 0.9755439758 0.9759340286 0.9753530025 0.9744780064 0.9753580093 0.975654006 0.9743149877 0.9742429852} {curve i x1041 1.010810018 1.010750055 1.011719942 1.013299942 1.012359977 1.009899974 1.007689953 1.007680058 1.007359982 1.006960034 1.005900025 1.006330013 1.004359961 1.004920006 1.004590034 1.004040003 1.004400015 1.004729986 1.006909966 1.008900046 1.009709954 1.008319974 1.005810022 1.005769968 1.009649992 1.010130048 1.008669972 1.005839944 1.005980015 1.005910039 1.006739974 1.006850004 1.005180001 1.004979968 1.005059958 1.005280018 1.004539967 1.00474 1.007400036 1.006029963 1.006489992 1.004979968 1.004340053 1.005110025 1.005089998 1.005499959 1.007480025 1.008049965 1.013440013 1.017349958 1.018450022 1.01602006 1.014829993 1.016389966 1.019539952 1.017009974 1.016440034 1.021229982 1.022969961} {curve i x1041 1.025449991 1.025500059 1.026859999 1.029360056 1.028380036 1.024600029 1.021229982 1.02057004 1.019909978 1.019629955 1.018669963 1.019019961 1.016379952 1.01760006 1.017259955 1.016219974 1.016170025 1.016299963 1.019530058 1.023069978 1.024469972 1.02244997 1.018730044 1.019520044 1.025349975 1.026950002 1.024369955 1.019989967 1.020220041 1.019850016 1.020560026 1.020619988 1.018260002 1.018100023 1.019060016 1.018069983 1.01662004 1.017179966 1.021029949 1.019060016 1.020050049 1.018020034 1.017030001 1.018370032 1.018329978 1.019129992 1.022719979 1.023740053 1.031710029 1.037389994 1.038930058 1.035130024 1.033310056 1.035189986 1.039540052 1.035850048 1.034369946 1.041129947 1.043169975} {curve i x1081 0}}
  name CurveTool_power
  xpos 635
  ypos 559
  addUserKnob {20 User}
  addUserKnob {18 avg_curve}
  avg_curve {{"intensitydata.r.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.g.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.b.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i}}
  addUserKnob {6 avg_curve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 avgCurve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
push $Ncb98fc00
 CurveTool {
  ROI {0 0 2048 1556}
  autocropdata {512 389 1536 1167}
  intensitydata {{curve x1041 0.9600409865 0.9823639989 1.007249951 1.011739969 1.019680023 1.001870036 0.9960100055 0.9642019868 0.9337419868 0.9141669869 0.9181159735 0.9140290022 0.9155070186 0.9317619801 0.950963974 0.9475179911 0.9098500013 0.9077140093 0.9747319818 1.037649989 1.049119949 1.059149981 1.042449951 1.047279954 1.055269957 1.06317997 1.027179956 1.014909983 1.03113997 1.009119987 1.002570033 0.999688983 1.000929952 1.004160047 0.987662971 0.9658979774 0.9575660229 0.9668890238 0.9731490016 0.9759280086 0.9941790104 0.995923996 0.9965500236 0.9921529889 0.9969310164 1.025439978 1.025300026 1.020939946 1.041640043 1.047309995 1.044729948 1.041810036 1.042610049 1.052070022 1.071069956 1.077379942 1.070180058 1.071490049 1.069829941} {curve x1041 1.22002995 1.222910047 1.230100036 1.241160035 1.24751997 1.241119981 1.24198997 1.219490051 1.216099977 1.222000003 1.227180004 1.205189943 1.196169972 1.202839971 1.209390044 1.205989957 1.171939969 1.147429943 1.163190007 1.191300035 1.20547998 1.204660058 1.207460046 1.227820039 1.273219943 1.27662003 1.280920029 1.300519943 1.294780016 1.330909967 1.354230046 1.345770001 1.301090002 1.276460052 1.278100014 1.247410059 1.212910056 1.204650044 1.205569983 1.200839996 1.194139957 1.184239984 1.18166995 1.196040034 1.211169958 1.229900002 1.259989977 1.272099972 1.293959975 1.294980049 1.290030003 1.264770031 1.238129973 1.204630017 1.19374001 1.181419969 1.154829979 1.15357995 1.136559963} {curve x1041 0.7326949835 0.7359809875 0.7314450145 0.7253140211 0.7305179834 0.7376350164 0.7640950084 0.7719849944 0.7572759986 0.7435960174 0.7313979864 0.729246974 0.7384899855 0.7295230031 0.7234659791 0.7295939922 0.7363749743 0.7400749922 0.7218090296 0.7114880085 0.6903529763 0.6865249872 0.7051410079 0.6995859742 0.6734319925 0.6517410278 0.6482239962 0.6681680083 0.6740970016 0.6961849928 0.7224289775 0.7349709868 0.7421990037 0.7367010117 0.7260349989 0.7363439798 0.748175025 0.7373669744 0.719456017 0.7207660079 0.7170950174 0.7200490236 0.7264050245 0.7113819718 0.7122809887 0.7139940262 0.7029640079 0.6979709864 0.6827110052 0.6741009951 0.6763340235 0.679535985 0.6798999906 0.6840689778 0.6888369918 0.6996279955 0.7068309784 0.7075920105 0.7084100246} {curve x1081 0}}
  name CurveTool_slope
  xpos 625
  ypos 425
  addUserKnob {20 User}
  addUserKnob {18 avg_curve}
  avg_curve {{"intensitydata.r.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.g.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i} {"intensitydata.b.integrate( Ctrl.frame_in,Ctrl.frame_out)/(Ctrl.frame_out-Ctrl.frame_in)" i}}
  addUserKnob {6 avg_curve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 avgCurve_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
push $Ncb950000
 FrameHold {
  firstFrame 1001
  name FrameHoldTarget
  xpos 2010
  ypos -389
 }
 FrameRange {
  first_frame {{FrameRange2.knob.last_frame/2+1}}
  last_frame {{FrameRange2.knob.last_frame}}
  time ""
  name FrameRange6
  xpos 2036
  ypos -300
 }
push $Ncb8ff000
 FrameHold {
  firstFrame 1001
  name FrameHoldSource
  xpos 1899
  ypos -348
 }
 FrameRange {
  first_frame 1
  last_frame {{FrameRange2.knob.last_frame/2 x1001 100}}
  time ""
  name FrameRange5
  xpos 1899
  ypos -300
 }
 AppendClip {
  inputs 2
  meta_from_first false
  time ""
  name AppendClip1
  xpos 1947
  ypos -168
 }
 FrameRange {
  first_frame 1
  last_frame 3000
  time ""
  name FrameRange2
  xpos 1947
  ypos -144
 }
 Crop {
  box {{int(random(frame+Ctrl.seed+1)*35)*32} {int(random(frame+Ctrl.seed+1)*35)*32} {int(random(frame+Ctrl.seed+1)*35)*32+32} {int(random(frame+Ctrl.seed+1)*35)*32+32}}
  reformat true
  crop false
  name Crop2
  xpos 1947
  ypos -104
 }
 Reformat {
  format "32 32 0 0 32 32 1 square_32"
  resize none
  black_outside true
  name Reformat8
  xpos 1947
  ypos -67
 }
 Blur {
  channels rgb
  size 1.75
  quality 30
  name Blur1
  xpos 1947
  ypos -9
 }
 AddChannels {
  channels graded
  name AddChannels3
  xpos 1947
  ypos 60
 }
 Shuffle2 {
  fromInput1 {{0} B}
  out1 graded
  fromInput2 {{0} B}
  mappings "3 rgba.red 0 0 graded.red 0 0 rgba.green 0 1 graded.green 0 1 rgba.blue 0 2 graded.blue 0 2"
  name Shuffle2
  xpos 1947
  ypos 117
 }
 OCIOCDLTransform {
  channels graded
  slope {{slopeMode==1||slopeMode==4?random(seed,frame)>0.5?((random(seed,frame)-0.5)*2)*(maxSlp-1)+1:1/((((random(seed,frame)-0.5)*2)*(maxSlp-1)*-1)+1):1} {slopeMode==1||slopeMode==4?random(seed+1,frame)>0.5?((random(seed+1,frame)-0.5)*2)*(maxSlp-1)+1:1/((((random(seed+1,frame)-0.5)*2)*(maxSlp-1)*-1)+1):1} {slopeMode==1||slopeMode==4?random(seed+2,frame)>0.5?((random(seed+2,frame)-0.5)*2)*(maxSlp-1)+1:1/((((random(seed+2,frame)-0.5)*2)*(maxSlp-1)*-1)+1):1}}
  offset {{powerMode==1?((random(seed+5,frame)-0.5)*2)*(maxOffset-1):0} {powerMode==1?((random(seed+4,frame)-0.5)*2)*(maxOffset-1):0} {powerMode==1?((random(seed+3,frame)-0.5)*2)*(maxOffset-1):0}}
  power {{powerMode==1?random(seed+6,frame)>0.5?((random(seed+6,frame)-0.5)*2)*(maxPower-1)+1:1/((((random(seed+6,frame)-0.5)*2)*(maxPower-1)*-1)+1):1} {powerMode==1?random(seed+7,frame)>0.5?((random(seed+7,frame)-0.5)*2)*(maxPower-1)+1:1/((((random(seed+7,frame)-0.5)*2)*(maxPower-1)*-1)+1):1} {powerMode==1?random(seed+8,frame)>0.5?((random(seed+8,frame)-0.5)*2)*(maxPower-1)+1:1/((((random(seed+8,frame)-0.5)*2)*(maxPower-1)*-1)+1):1}}
  working_space scene_linear
  name OCIOCDLTransformSAW
  xpos 1947
  ypos 166
  addUserKnob {20 User}
  addUserKnob {3 seed}
  seed {{Ctrl.seed}}
  addUserKnob {7 maxSlp R 1 5}
  maxSlp 2
  addUserKnob {3 slopeMode -STARTLINE}
  slopeMode {{random(frame+Ctrl.seed+75)>.1}}
  addUserKnob {7 maxOffset R 1 3}
  maxOffset 1.05
  addUserKnob {3 offsetMode -STARTLINE}
  offsetMode {{(random(frame+Ctrl.seed))>0.7}}
  addUserKnob {7 maxPower R 1 3}
  maxPower 1.05
  addUserKnob {3 powerMode -STARTLINE}
  powerMode {{(random(frame+Ctrl.seed+1))>0.7}}
 }
set Nb92cf000 [stack 0]
 AddChannels {
  channels cdlSlope
  channels2 cdlPower
  channels3 cdlOffset
  name AddChannels2
  xpos 1947
  ypos 255
 }
 Remove {
  operation keep
  channels cdlSlope
  channels2 cdlPower
  channels3 cdlOffset
  name Remove3
  xpos 1947
  ypos 308
 }
 Expression {
  channel0 {cdlSlope.red -cdlSlope.green -cdlSlope.blue}
  expr0 OCIOCDLTransformSAW.slope.r
  channel1 {-cdlSlope.red cdlSlope.green -cdlSlope.blue}
  expr1 OCIOCDLTransformSAW.slope.g
  channel2 {-cdlSlope.red -cdlSlope.green cdlSlope.blue}
  expr2 OCIOCDLTransformSAW.slope.b
  channel3 {none none none -rgba.alpha}
  name ExpressionSlope
  xpos 1947
  ypos 363
 }
 Expression {
  channel0 {cdlPower.red -cdlPower.green -cdlPower.blue}
  expr0 (OCIOCDLTransformSAW.power.r)
  channel1 {-cdlPower.red cdlPower.green -cdlPower.blue}
  expr1 (OCIOCDLTransformSAW.power.g)
  channel2 {-cdlPower.red -cdlPower.green cdlPower.blue}
  expr2 (OCIOCDLTransformSAW.power.b)
  channel3 {none none none -rgba.alpha}
  name ExpressionPower
  xpos 1947
  ypos 390
 }
 Expression {
  channel0 {cdlOffset.red -cdlOffset.green -cdlOffset.blue}
  expr0 OCIOCDLTransformSAW.offset.r+1
  channel1 {-cdlOffset.red cdlOffset.green -cdlOffset.blue}
  expr1 OCIOCDLTransformSAW.offset.g+1
  channel2 {-cdlOffset.red -cdlOffset.green cdlOffset.blue}
  expr2 OCIOCDLTransformSAW.offset.b+1
  channel3 {none none none -rgba.alpha}
  name ExpressionOffset
  xpos 1947
  ypos 414
 }
 Grade {
  channels all
  white 0.2
  white_clamp true
  name Grade2
  xpos 1947
  ypos 438
 }
 Clamp {
  name Clamp2
  xpos 1947
  ypos 493
 }
push $Nb92cf000
 Dot {
  name Dot1
  xpos 1801
  ypos 233
 }
 Remove {
  operation keep
  channels rgb
  channels2 graded
  name Remove1
  xpos 1767
  ypos 298
 }
 Clamp {
  minimum_enable false
  maximum 5
  name Clamp5
  xpos 1767
  ypos 322
 }
 Grade {
  channels all
  blackpoint -0.2
  white 0.2
  black_clamp false
  name Grade1
  xpos 1767
  ypos 460
 }
 Clamp {
  name Clamp3
  xpos 1767
  ypos 559
 }
 CopyCat {
  inputs 2
  epochs 150
  totalSteps 8181
  Advanced 1
  initialWeights Checkpoint
  batchSizeType Manual
  autoBatchSize 512
  batchSize 55
  cropSize 32
  useMultiResolution false
  logScale true
  smoothness 0.26
  showOriginal false
  name CopyCatGrade
  xpos 1947
  ypos 589
 }
 NoOp {
  inputs 0
  name Ctrl
  xpos 1371
  ypos 102
  addUserKnob {20 User}
  addUserKnob {3 seed}
  seed 2
  addUserKnob {22 create_cdl l "Create CDL" T "import nuke\n\ndef runCurves(node_from, knob_to):\n    node_from = nuke.toNode(node_from)\n    frame_in = int(nodeCtrl.knob('frame_in').value())\n    frame_out = int(nodeCtrl.knob('frame_out').value())\n    nuke.execute(node_from, frame_in, frame_out)\n    r, g, b = node_from.knob('avg_curve').value()\n    node_to.knob(knob_to).setValue(\[r, g, b])\n\ndef set_knob_value(node, knob_name, value):\n    knob = node\[knob_name]\n    #knob.clearAnimated()\n    for curve in knob.animations():\n        curve.clear()\n    knob.setValue(value)\n\nnodeCtrl = nuke.toNode('Ctrl')\nnode_to = nuke.toNode('OCIOCDLTransform')\n\nfor x in \['slope', 'offset', 'power']:\n    node_c = nuke.toNode('CurveTool_' + x)\n    set_knob_value(node_c, 'intensitydata', 0)\n\nif nodeCtrl and node_to:\n    for x in \['slope', 'offset', 'power']:\n        runCurves('CurveTool_' + x, x)\nelse:\n    nuke.message(\"Error: 'Ctrl' or 'OCIOCDLTransform' node not found.\")\n\n\n" +STARTLINE}
  addUserKnob {22 exportCDLnode l "export CDL node" -STARTLINE T "node_to = nuke.toNode('OCIOCDLTransform')  \n\nwith nuke.toNode('.'.join(\['root'] + nuke.thisNode().fullName().split('.')\[:-2])):\n newNode = nuke.createNode(node_to.Class(), node_to.writeKnobs(nuke.TO_SCRIPT | nuke.WRITE_NON_DEFAULT_ONLY)) "}
  addUserKnob {22 copyModelFile l "Set Inference" T "import nuke\n\ndef copy_and_paste_knob_value(source_node, source_knob_name, target_node, target_knob_name):\n    source_knob = source_node\[source_knob_name]\n    target_knob = target_node\[target_knob_name]\n    if source_knob and target_knob:\n        target_knob.setValue(source_knob.value())\n\nto_inference_grade_node = nuke.toNode( 'Inference')\n\ncopycat_grade_node = nuke.toNode('CopyCatGrade')\ncopycat_grade_node.showControlPanel()\n\ncopycat_grade_node\['createInference'].execute()\ncopycat_grade_node.hideControlPanel()\ntempInferance = nuke.selectedNode()\t\n\ncopy_and_paste_knob_value(tempInferance, 'modelFile', to_inference_grade_node, 'modelFile')\nnuke.delete(tempInferance)\n" +STARTLINE}
  addUserKnob {3 frame_in}
  frame_in {{parent.FrameRange1.knob.first_frame}}
  addUserKnob {3 frame_out l "" -STARTLINE}
  frame_out {{parent.FrameRange1.knob.last_frame}}
 }
end_group
